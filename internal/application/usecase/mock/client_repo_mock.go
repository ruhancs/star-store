// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/domain/gateway/client_repository.go

// Package mock_gateway is a generated GoMock package.
package mock_gateway

import (
	reflect "reflect"
	entity "star_store/internal/domain/entity"

	gomock "github.com/golang/mock/gomock"
)

// MockClientRepositoryInterface is a mock of ClientRepositoryInterface interface.
type MockClientRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientRepositoryInterfaceMockRecorder
}

// MockClientRepositoryInterfaceMockRecorder is the mock recorder for MockClientRepositoryInterface.
type MockClientRepositoryInterfaceMockRecorder struct {
	mock *MockClientRepositoryInterface
}

// NewMockClientRepositoryInterface creates a new mock instance.
func NewMockClientRepositoryInterface(ctrl *gomock.Controller) *MockClientRepositoryInterface {
	mock := &MockClientRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockClientRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientRepositoryInterface) EXPECT() *MockClientRepositoryInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockClientRepositoryInterface) Create(client *entity.Client) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", client)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockClientRepositoryInterfaceMockRecorder) Create(client interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockClientRepositoryInterface)(nil).Create), client)
}

// Get mocks base method.
func (m *MockClientRepositoryInterface) Get(id string) (entity.Client, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", id)
	ret0, _ := ret[0].(entity.Client)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockClientRepositoryInterfaceMockRecorder) Get(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockClientRepositoryInterface)(nil).Get), id)
}
